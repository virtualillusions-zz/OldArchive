MaterialDef Phong Lighting {

    MaterialParameters {

        Boolean m_VertexLighting // sp impl need
        Boolean m_LowQuality // sp impl need

        Boolean m_UseAlpha // mp impl need
        Boolean m_UseMaterialColors // sp impl need  -v-
        Boolean m_UseVertexColor // sp/mp impl needed
        Color m_Ambient
        Color m_Diffuse
        Color m_Specular

        Texture2D m_DiffuseMap
        Texture2D m_NormalMap
        Texture2D m_SpecularMap
        Texture2D m_ParallaxMap // sp impl need
        Float m_Shininess
    }

    Technique {

        LightMode MultiPass

        VertexShader GLSL100: per_light.vert
        FragmentShader GLSL100: per_light.frag

        WorldParameters {
            WorldViewProjectionMatrix
            NormalMatrix
            WorldViewMatrix
            ViewMatrix
        }

        Defines {
            USE_ALPHA : m_UseAlpha
            VERTEX_COLOR : m_UseVertexColor
            VERTEX_LIGHTING : m_VertexLighting
            ATTENUATION : m_Attenuation
            MATERIAL_COLORS : m_UseMaterialColors
            LOW_QUALITY : m_LowQuality

            DIFFUSEMAP : m_DiffuseMap
            NORMALMAP : m_NormalMap
            SPECULARMAP : m_SpecularMap
            PARALLAXMAP : m_ParallaxMap
        }

    }

    Technique NewGpu {

        LightMode SinglePass

        VertexShader GLSL100: phong_lighting.vert
        FragmentShader GLSL100: phong_lighting.frag

        WorldParameters {
            WorldViewProjectionMatrix
            NormalMatrix
            WorldMatrix
            WorldViewMatrix
            ViewMatrix
        }

        Defines {
            HAS_DIFFUSEMAP : m_DiffuseMap
            HAS_NORMALMAP : m_NormalMap
            HAS_SPECULARMAP : m_SpecularMap
            USE_ALPHA : m_UseAlpha
        }
    }

    Technique FixedFunc {
        LightMode FixedPipeline
    }

}